include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - test
  - sonar
  - build

services:
  - docker:20.10.8-dind

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

test:
  # these tags will force execution on our amd64 runner
  tags:
    - dubhub
    - ubuntu
    - amd64
  stage: test
  image: "$CI_REGISTRY/dubhub/dockerfiles/pgalpinefortest:13.2"
  cache:
    key: $CI_RUNNER_EXECUTABLE_ARCH
    paths:
      - .cache/pip
      - AcmeHrApp/lds/chunks
      - AcmeHrApp/lds/snaps
  variables:
    DB_NAME: test_db
    DB_HOST: localhost
    DB_PORT: 5432
    DB_PASSWORD: 1234
    POSTGRES_PASSWORD: 1234
  script:
    - cd AcmeHrApp
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - |
      echo "AWS_ACCESS_KEY=AKIAUHSNYEVRRFILHLWA
      AWS_SECRET_KEY=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
      AWS_REGION=eu-west-1
      bucket=dubhubtestdb
      snapkey=39ca3442d9d473b5463cc8e21de17702ba1ec9505a08c30cfaba72aff08297e3
      chunkdir=/var/lds/chunks
      snapdir=/var/lds/snaps
      clonesdir=/var/lds/clones
      " >> /var/lds/config.dubhub
    - mkdir -p lds/chunks lds/snaps lds/clones
    - rm -rf lds/clones/* # just in case, remove old clones if exists
    - rm -rf /var/lds/clones /var/lds/chunks /var/lds/snaps # remove dir if it exists
    - ln -s $(pwd)/lds/chunks $(pwd)/lds/snaps $(pwd)/lds/clones -t /var/lds # map chunks and snaps to /var/lds dirs so we make use of the cache
    - tail +3 /var/lds/config >> /var/lds/config.dubhub
    - export SNAP_BASE_PW=39ca3442d9d473b5463cc8e21de17702ba1ec9505a08c30cfaba72aff08297e3
    - /dubhub/bin/lds clone latest --fetch --config=/var/lds/config.dubhub --port=5432 --name=achitest
    - sleep 5
    - python manage.py test
    - coverage run manage.py test
    - coverage report
    - coverage xml
  artifacts:
    when: always
    paths:
      - AcmeHrApp/coverage.xml
      - AcmeHrApp/lds/clones/
    reports:
      junit:
        - AcmeHrApp/test-reports.xml
      coverage_report:
        coverage_format: cobertura
        path: AcmeHrApp/coverage.xml
    expire_in: 1 week

sonarcloud-check:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  needs: ["test"]
  dependencies:
    - test

build:
  stage: build
  image: docker:20.10.8
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_TEST_IMAGE --build-arg DB_HOST=localhost --build-arg DB_PASSWORD=1234 --build-arg DB_PORT=5433 .
    - docker push $CONTAINER_TEST_IMAGE
